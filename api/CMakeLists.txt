
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "W:/BathyWork/workTrunk/msvc2013/x64/third-party/cmake/hdf5")

#The debug build will have a 'd' postfix
SET(CMAKE_DEBUG_POSTFIX  "d")

#Preset install dir
IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  SET(CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}/installed" CACHE PATH "CMAKE_INSTALL_PREFIX" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

IF(MSVC)

    #ignore some warnings generated by windows.
    add_definitions(/D_CRT_SECURE_NO_WARNINGS /D _CRT_NONSTDC_NO_DEPRECATE)
    
	#if we are building a shared library, then we need to define these symbols.
	IF(BUILD_SHARED_LIBS)
		add_definitions(/D BAG_DLL /D BAG_EXPORTS)
	ENDIF(BUILD_SHARED_LIBS)

ENDIF(MSVC)

set (BAG_SOURCE_FILES 
 bag_dataset.h
 bag_dataset.cpp
 bag_interleavedlayer.h
 bag_interleavedlayer.cpp
 bag_layer.h
 bag_layer.cpp
 bag_legacy_crs.h
 bag_legacy_crs.cpp
 bag_metadata.h
 bag_metadata.cpp
 bag_metadatatypes.h
 bag_metadatatypes.cpp
 bag_metadata_import.cpp
 bag_metadata_import.h
 bag_trackinglist.h
 bag_trackinglist.cpp
 bag_errors.h
 bag_fordec.h
 bag_stdint.h
 bag_types.h)
source_group("Source Files" FILES ${BAG_SOURCE_FILES})
 
add_library (bag ${LIB_TYPE} ${BAG_SOURCE_FILES} )

#HDF5
find_package (HDF5 CONFIG REQUIRED hdf5_cpp )
include_directories (${HDF5_INCLUDE_DIRS}) 
target_link_libraries(bag ${HDF5_LIBRARIES})

#LibXML2
find_package( LibXml2 MODULE REQUIRED )
include_directories (${LIBXML2_INCLUDE_DIRS}) 
target_link_libraries(bag ${LIBXML2_LIBRARIES})

IF(MSVC)

    #Apparently some versions of Visual Studio require us to link to ws2_32.lib
    target_link_libraries(bag "ws2_32.lib")
    
ENDIF(MSVC)
